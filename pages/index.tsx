import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react';
import 'firebase/messaging';
import { firebaseCloudMessaging } from '../utils/firebase';
export default function Home() {

  const [tokenValue, setTokenValue] = useState('')
  useEffect(() => {
    // Event listener that listens for the push notification event in the background
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.addEventListener('message', (event) => {
        console.log('event for the service worker', event);
      });
    }

    // Calls the getMessage() function if the token is there
  });

  const setToken = async () => {
    try {
      const token = await firebaseCloudMessaging.init();
      alert(token)
      if (token) {
        console.log('token', token);
        setTokenValue(token)
      }
    } catch (error) {
      console.log(error);
    }
  }

  const askNotificationPermission = async () => {
    try {
      const permissionResult = await Notification.requestPermission();
      return permissionResult;
    } catch (error) {
      console.error("Error while asking for notification permission:", error);
      return null;
    }
  }

  const handleNotificationPermission = async () => {
    const permissionResult = await askNotificationPermission();
    if (permissionResult === "granted") {
      setToken()
      // User granted notification permission
      // Now you can subscribe to push notifications
    } else if (permissionResult === "denied") {
      alert('denied')

      // User denied notification permission
      // You can handle this case accordingly (e.g., show an informative message)
    } else if (permissionResult === "default") {
      alert('default')

      // User closed the permission prompt without making a choice
      // You can handle this case accordingly (e.g., show a prompt later)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <h1>React App with Push Notifications</h1>
        <button onClick={handleNotificationPermission}>
          Enable Push Notifications
        </button>
        <textarea value={tokenValue} onChange={() => ''} rows={10} cols={200}></textarea>
      </div>
    </div>
  )
}
